<?xml version="1.0" encoding="UTF-8"?>
<!-- Generado con el arquetipo: standalone-archetype http://pimpam.googlecode.com -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- Identificador del componente -->
	<groupId>es.uv</groupId>
	<artifactId>aLiteral</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>aLiteral</name>
	<description>[MODIFICAR] Descripción del proyecto</description>
	<organization>
		<name>${companyName}</name>
		<url>${companyUrl}</url>
	</organization>
	<!-- [MODIFICAR] la URL del proyecto. Ojo no suprimir la URL, ya que es 
		obligatoria para el maven-changes-plugin -->
	<url>http://develenv.softwaresano.com/sites/es.uv/aLiteral 
    </url>
	<licenses>
		<license>
			<name>GNU GENERAL PUBLIC LICENSE</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
			<distribution>GPL 3.0</distribution>
		</license>
	</licenses>
	<!-- [MODIFICAR] Fijar el desarrollador por defecto y añadir el resto de 
		desarrolladores -->
	<developers>
		<developer>
			<id>${userId}</id>
			<name>${userName}</name>
			<email>${userMail}</email>
			<roles>
				<role>${userRole}</role>
			</roles>
			<organization>${userOrganization}</organization>
			<timezone>+1</timezone>
		</developer>
	</developers>
	<!-- Entorno de integración contínua -->
	<!-- [MODIFICAR] Añadir todos los correos a los que llegarán las notificaciones 
		de errores o solución de errores -->
	<ciManagement>
		<system>${continousIntegrationSystem}</system>
		<url>${continousIntegrationSystemUrl}/job/aLiteral</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<sendOnError>true</sendOnError>
				<sendOnFailure>true</sendOnFailure>
				<sendOnSuccess>false</sendOnSuccess>
				<sendOnWarning>false</sendOnWarning>
				<configuration>
					<address>${userMail}</address>
				</configuration>
			</notifier>
			<!-- notifier> <type>mail</type> <configuration> <address>usuario1@foo.com</address> 
				</configuration> </notifier> <notifier> <type>mail</type> <configuration> 
				<address>usuario2@foo.com</address> </configuration> </notifier -->
		</notifiers>
	</ciManagement>
	<!-- Configuración del SCM (SVN) -->
	<!-- [MODIFICAR] Poner las urls del SVN correspondiente, sin utilizar propiedades -->
	<scm>
		<connection>scm:hg:http://localhost:8000</connection>
		<developerConnection>scm:hg:http://localhost:8000</developerConnection>
		<url>http://localhost:8000</url>
	</scm>
	<build>
		<!-- Propiedades del proyecto dependendientes del entorno -->
		<filters>
			<filter>src/main/filters/${env}.properties</filter> <!-- Para un entorno en concreto -->
		</filters>
		<!-- Recursos sobre los que se van a aplicar los filtros -->
		<resources>
			<resource>
				<!-- Sólo se filtran los contenidos textuales. Si se filtra una imagen(*.png,*.gif), 
					está quedará corrupta -->
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.txt</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<!-- El contenido textual ya se ha añadido y filtrado en el paso anterior -->
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.xml</exclude>
					<exclude>**/*.txt</exclude>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- integración con SVN -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.2</version>
				<configuration>
					<goals>install</goals>
					<checkoutDirectory>${scmCheckoutDirectory}</checkoutDirectory>
					<username>${scmUser}</username>
					<password>${scmPassword}</password>
					<tagBase>${scmUrl}/tags</tagBase>
				</configuration>
			</plugin>
			<!-- Generar una release. Es necesario tener instalado un cliente de SVN -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.0-beta-9</version>
				<configuration>
					<username>${scmUser}</username>
					<password>${scmPassword}</password>
					<tagBase>${scmUrl}/tags</tagBase>
				</configuration>
			</plugin>
			<!-- Plugin HUDSON -->
			<plugin>
				<groupId>org.jvnet.hudson.tools</groupId>
				<artifactId>maven-hudson-plugin</artifactId>
				<version>2.0-alpha-5</version>
				<configuration>
					<subversionURL>${scmUrl}/trunk/${project.artifactId}</subversionURL>
					<includeCobertura>false</includeCobertura>
					<includeJavadoc>false</includeJavadoc>
					<!-- Cada vez que se actualice el proyecto en hudson se contruirá el 
						site -->
					<additionalGoals>deploy site:site site:deploy
						org.codehaus.sonar:sonar-maven-plugin::sonar</additionalGoals>
				</configuration>
			</plugin>
			<!-- modificar las opciones del compilador -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<source>${jvm.version}</source>
					<target>${jvm.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<debug>${compilerInfoDebug}</debug>
					<optimize>${compilerOptimize}</optimize>
					<showWarnings>${compilerShowWarnings}</showWarnings>
					<showDeprecation>${compilerShowDeprecation}</showDeprecation>
					<verbose>${compilerVerbose}</verbose>
				</configuration>
			</plugin>
			<!-- Definición del empaquetado del proyecto -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2-beta-2</version>
				<configuration>
					<filters>
						<filter>src/main/filters/${env}.properties</filter> <!-- Para un entorno en concreto -->
					</filters>
					<descriptors>
						<descriptor>src/main/assembly/dep.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<!-- Copiar assembly al site -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>pre-site</phase>
						<id>assembly</id>
						<configuration>
							<tasks>
								<mkdir dir="target/site" />
								<mkdir dir="target/site/assemblies" />
								<copy todir="target/site/assemblies">
									<fileset dir="target/">
										<filename name="aLiteral*-bin.*" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>rename</id>
						<configuration>
							<tasks>
								<mkdir dir="target/site" />
								<mkdir dir="target/site/assemblies" />
								<copy todir="target/site/assemblies">
									<fileset dir="target/">
										<filename name="aLiteral*-bin.*" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Generación de test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>it-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/test/*.class</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Como se ha de generar el jar del proyecto -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<archive>
						<manifest>
							<!-- Por defecto siempre se arranca la aplicación con Bootstrap -->
							<mainClass>es.uv.aLiteral.main.Bootstrap 
                            </mainClass>
							<packageName>es.uv.aLiteral 
                            </packageName>
							<addClasspath>true</addClasspath>
							<addExtensions />
							<!-- Todos los jars de los que se dependa estarán en el directorio 
								lib -->
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<!-- Se adelante al classpath el directorio conf/ -->
							<Class-Path>conf/</Class-Path>
							<Released-Date> ${buildNumber}</Released-Date>
							<Implementation-Version> ${pom.version}</Implementation-Version>
							<Implementation-Title> ${project.name} -
								${buildNumber} </Implementation-Title>
							<mode>${env}</mode>
							<url>${pom.url}</url>
							<organization>${project.organization.name} 
                            </organization>
							<Built-By>${userName}</Built-By>
							<developer>${userName}</developer>
							<developer-mail>${userMail}</developer-mail>
						</manifestEntries>
					</archive>
					<excludes>
						<!-- Estos dos ficheros irán el directorio conf/ de la aplicación cuando 
							se haga el assembly. El main.properties con la configuración del componente 
							se ha de agregar cuando se use el componente. -->
						<exclude>log4j.xml</exclude>
						<exclude>main.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<!-- En modo SNAPSHOT se hace coincidir con el número de revisión del 
					SVN -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin 
                </artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>{0,date,yyyy-MM-dd}</format>
					<items>
						<item>timestamp</item>
					</items>
					<doCheck>true</doCheck>
					<doUpdate>true</doUpdate>
				</configuration>
			</plugin>
			<!-- Enviar un mail con las releases notes descritas en el src/changes/changes.xml -->
			<!--plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>changes-report</goal>
							<goal>announcement-generate</goal>
						</goals>
						<id>announcement-generate</id>
					</execution>
					<execution>
						<phase>release</phase>
						<goals>
							<goal>announcement-mail</goal>
						</goals>
						<id>announcement-mail</id>
					</execution>
				</executions>
				<configuration>
					<mailSender>
						<name>${userName}</name>
						<email>${userMail}</email>
					</mailSender>
					<smtpHost>${smtpHost}</smtpHost>
					<toAddresses>
						<toAddress implementation="java.lang.String">${userMail} 
                        </toAddress>
					</toAddresses>
				</configuration>
			</plugin-->
			<!-- Cobertura de los test -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin 
                </artifactId>
				<version>2.4</version>
				<configuration>
					<check>
						<haltOnFailure>false</haltOnFailure>
					</check>
					<instrumentation>
						<excludes>
							<exclude>**/main/Bootstrap.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
				<executions>
					<execution>
						<id>clean</id>
						<phase>pre-site</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<execution>
						<id>instrument</id>
						<phase>site</phase>
						<goals>
							<goal>instrument</goal>
							<goal>cobertura</goal>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--Agregador de informes -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dashboard-maven-plugin</artifactId>
				<version>1.0.0-beta-1</version>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<!-- Dependencias internas -->

		<!-- Dependencias externas -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>logkit</groupId>
					<artifactId>logkit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>avalon-framework</groupId>
					<artifactId>avalon-framework</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.activation</groupId>
					<artifactId>activation</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Dependencias de test -->
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>${jmock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>${jmock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<version>${jmock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Necesaria para las librerías de test que funcionen con otra versión 
			de JUNIT por ejemplo spring-test funciona con JUNIT 3.8.1 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.cobertura</groupId>
			<artifactId>cobertura</artifactId>
			<version>1.9.4.1</version>
			<scope>provided</scope><!-- Workaround para el plugin de cobertura -->
		</dependency>
	</dependencies>
	<distributionManagement>
		<!-- Repositorio para hacer el deploy de las releases -->
		<repository>
			<id>${repoMavenId}</id>
			<name>${repoMavenName}</name>
			<url>${repoMavenUrl}</url>
		</repository>
		<!-- Repositorio de snapshot de Telefónica I+D Barcelona -->
		<snapshotRepository>
			<id>${repoMavenSnapshotId}</id>
			<name>${repoMavenSnapshotName}</name>
			<url>${repoMavenSnapshotUrl}</url>
		</snapshotRepository>
		<!-- Máquina donde se publica el site del proyecto -->
		<site>
			<id>${repoSiteId}</id>
			<name>${repoSiteName}</name>
			<url>${repoSiteUrl}/es.uv/aLiteral 
            </url>
		</site>
	</distributionManagement>
	<profiles>
		<!-- Profile desarrollo (Activo por defecto) -->
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<file>
					<!-- This employs that the basedir expression is only recognized by 
						Maven 3.x (see MNG-2363) -->
					<exists>${basedir}</exists>
				</file>
			</activation>
			<properties>
				<env>development</env>
				<compilerInfoDebug>true</compilerInfoDebug>
				<compilerOptimize>false</compilerOptimize>
			</properties>
		</profile>
		<!-- Integración -->
		<profile>
			<id>integration</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<env>integration</env>
				<compilerInfoDebug>true</compilerInfoDebug>
				<compilerOptimize>false</compilerOptimize>
			</properties>
		</profile>
		<!-- Producción -->
		<profile>
			<id>production</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<env>production</env>
				<compilerInfoDebug>false</compilerInfoDebug>
				<compilerOptimize>true</compilerOptimize>
			</properties>
		</profile>
		<profile>
			<id>stat-scm</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<pluginRepositories>
				<pluginRepository>
					<id>stat-scm</id>
					<name>stat-scm</name>
					<url>http://stat-scm.sourceforge.net/maven2/</url>
				</pluginRepository>
			</pluginRepositories>
			<reporting>
				<plugins>
					<!-- Plugin generación estadísticas SVN -->
					<plugin>
						<groupId>net.sf</groupId>
						<artifactId>stat-scm</artifactId>
						<version>1.2.0</version>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>maven-2</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>2.0.1</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<artifactId>maven-site-plugin</artifactId>
						<configuration>
							<locales>es</locales>
							<outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<!-- plugin para reports de sonar -->
					<plugin>
						<groupId>org.codehaus.sonar-plugins</groupId>
						<artifactId>maven-report</artifactId>
						<version>0.1</version>
					</plugin>
					<!-- Plugin para generar los referencias cruzadas del código -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jxr-maven-plugin</artifactId>
						<version>2.0-beta-1</version>
					</plugin>
					<!-- Plugin para generar los informes de entregas al SVN por desarrollador -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>changelog-maven-plugin</artifactId>
						<version>2.0-beta-1</version>
					</plugin>
					<!-- Plugin para generar los reports de calidad de código. Faltaría 
						definir las métricas a aplicar -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<linkXref>true</linkXref>
							<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
							<minimumTokens>100</minimumTokens>
							<targetJdk>${jvm.version}</targetJdk>
							<excludes>
								<exclude>**/pojos/*.java</exclude>
								<exclude>**/generated/*.java</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>javancss-maven-plugin</artifactId>
						<version>2.0-beta-2</version>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jdepend-maven-plugin</artifactId>
						<version>2.0-beta-2</version>
					</plugin>

					<!-- Plugin para generar los informes del JUNIT -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>2.5</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<version>2.1.2</version>
					</plugin>
					<!-- Plugin para analizar las tags en el código, por ejemplo para generar 
						un informe con todos los TODO -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>taglist-maven-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<tags>
								<tag>TODO</tag>
								<tag>FIXME</tag>
								<tag>@todo</tag>
								<tag>@deprecated</tag>
							</tags>
						</configuration>
					</plugin>
					<!-- Plugin para generar el control de cambios -->
					<!--plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changes-plugin</artifactId>
						<version>2.3</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>changes-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin-->
					<!-- Plugin para generar informes de calidad del código -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>2.5</version>
					</plugin>
					<!-- Genera los informes de Cobertura de los Test -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<formats>
								<format>xml</format>
								<format>html</format>
							</formats>
						</configuration>
					</plugin>
					<!-- Genera una agregación de informes -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dashboard-maven-plugin</artifactId>
						<version>1.0.0-beta-1</version>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jdepend-maven-plugin</artifactId>
						<version>2.0-beta-2</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.7</version>
						<configuration>
							<!-- Default configuration for all reports -->
						</configuration>
						<reportSets>
							<reportSet>
								<id>aggregate</id>
								<configuration>
									<!-- Specific configuration for the aggregate report -->
								</configuration>
								<reports>
									<report>aggregate</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>maven-3</id>
			<activation>
				<file>
					<!-- This employs that the basedir expression is only recognized by 
						Maven 3.x (see MNG-2363) -->
					<exists>${basedir}</exists>
				</file>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>3.0</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<artifactId>maven-site-plugin</artifactId>
						<configuration>
							<locales>es</locales>
							<outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>

							<reportPlugins>
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-project-info-reports-plugin</artifactId>
									<version>2.2</version>
									<configuration>
										<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
										<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
									</configuration>
								</plugin>
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-javadoc-plugin</artifactId>
									<version>2.7</version>
								</plugin>
								<!-- plugin para reports de sonar -->
								<plugin>
									<groupId>org.codehaus.sonar-plugins</groupId>
									<artifactId>maven-report</artifactId>
									<version>0.1</version>
								</plugin>
								<!-- Plugin para generar los referencias cruzadas del código -->
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-jxr-plugin</artifactId>
									<version>2.2</version>
								</plugin>
								<!-- Plugin para generar los informes de entregas al SVN por desarrollador -->
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-changelog-plugin</artifactId>
									<version>2.2</version>
								</plugin>
								<!-- Plugin para generar los reports de calidad de código. Faltaría 
									definir las métricas a aplicar -->
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-pmd-plugin</artifactId>
									<version>2.5</version>
									<configuration>
										<linkXref>true</linkXref>
										<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
										<minimumTokens>100</minimumTokens>
										<targetJdk>${jvm.version}</targetJdk>
										<excludes>
											<exclude>**/pojos/*.java</exclude>
											<exclude>**/generated/*.java</exclude>
										</excludes>
									</configuration>
								</plugin>
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-plugin-plugin</artifactId>
									<version>2.7</version>
								</plugin>
								<plugin>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>javancss-maven-plugin</artifactId>
									<version>2.0-beta-2</version>
								</plugin>
								<plugin>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>jdepend-maven-plugin</artifactId>
									<version>2.0-beta-2</version>
								</plugin>
								<!-- Plugin para generar los informes del JUNIT -->
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-surefire-report-plugin</artifactId>
									<version>2.7.2</version>
								</plugin>
								<!-- Plugin para analizar las tags en el código, por ejemplo para 
									generar un informe con todos los TODO -->
								<plugin>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>taglist-maven-plugin</artifactId>
									<version>2.4</version>
									<configuration>
										<tags>
											<tag>TODO</tag>
											<tag>FIXME</tag>
											<tag>@todo</tag>
											<tag>@deprecated</tag>
										</tags>
									</configuration>
								</plugin>
								<!-- Plugin para generar el control de cambios -->
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-changes-plugin</artifactId>
									<version>2.4</version>
									<reportSets>
										<reportSet>
											<reports>
												<report>changes-report</report>
											</reports>
										</reportSet>
									</reportSets>
								</plugin>
								<!-- Plugin para generar informes de calidad del código -->
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-checkstyle-plugin</artifactId>
									<version>2.6</version>
								</plugin>
								<!-- Genera los informes de Cobertura de los Test -->
								<plugin>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>cobertura-maven-plugin</artifactId>
									<version>2.4</version>
									<configuration>
										<formats>
											<format>xml</format>
											<format>html</format>
										</formats>
									</configuration>
								</plugin>
							</reportPlugins>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<!-- Por si no se tiene acceso a nexus -->
	<repositories>
		<repository>
			<id>central</id>
			<name>central-repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>softwaresano</id>
			<name>softwaresano</name>
			<url>https://softwaresano-repomaven.googlecode.com/svn/releases/</url>
		</pluginRepository>
		<pluginRepository>
			<id>central</id>
			<name>central-repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</pluginRepository>
		<pluginRepository>
			<id>java.net</id>
			<name>java.net</name>
			<url>http://download.java.net/maven/2/</url>
		</pluginRepository>
		<pluginRepository>
			<id>stat-scm</id>
			<name>stat-scm</name>
			<url>http://stat-scm.sourceforge.net/maven2/</url>
		</pluginRepository>
		<pluginRepository>
			<id>codehaus</id>
			<name>codehaus</name>
			<url>http://repository.codehaus.org</url>
		</pluginRepository>
	</pluginRepositories>
	<properties>
		<!-- Forzamos a los plugins a utilizar UTF-8, para evitar problemas con 
			los encodings por defectos de los diferentes sistemas operativos -->
		<jvm.version>1.6</jvm.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<copyright.year>2011</copyright.year>
		<junit.version>4.7</junit.version>
		<cxf.version>2.1.4</cxf.version>
		<jmock.version>2.5.1</jmock.version>
	</properties>
</project>
